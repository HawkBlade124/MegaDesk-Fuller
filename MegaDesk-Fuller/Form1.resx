<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAG8pJREFUeF7t
        3b2OLFd2JlC9h15DkCF7MAOR/SPoAUiDgiRARs849LpB0GigTTnjNWQL0BMIoMU3EP15AgnXkUniztmp
        PKW4yV2nMiLy58SuZSxk5nerorLqNHt/cSKr8k/+1//+BQDwzqQhAFBbGgIAtaUhAFBbGgIAtaUhAFBb
        GgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUh
        AFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIA
        taUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBb
        GgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUh
        AFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIA
        taUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBb
        GgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUhAFBbGgIAtaUh
        vObv/vbv/zR8/fXXv/zF53/15Wvi3/vHZscB4LnSELo+6D/7y1999z//x2f/L/z5n/3Fx2v1z2mf/4+9
        GGRfB4DHSkPet+XAz4b6XudC8F18HTsEAM+Rhrw/MYjjLP1eQ39EGQB4vDTk/TgP/u+ywfxo/VKBIgBw
        f2lIff2MPxvEzxZFIHvOANxOGlJbbLc/Y6v/WvH8sucNwO2kIXXNetbfOfsHeIw0pJ6ZrvWPREHJnj8A
        t5WG1BLDf+Yt/y6eoxcAAjxGGlLHUYZ/cPYP8DhpSA1HGv7O/gEeKw2p4QjX/Dtn/wCPlYYcXwzUbNDO
        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
        WxwFABhSAOgUgELa4igAwJACQKcAFNIWRwEAhhQAOgWgkLY4CgAwpADQKQCFtMVRAIAhBYBOASikLY4C
        AAwpAHQKQCFtcRQAYEgBoFMACmmLowAAQwoAnQJQSFscBQAYUgDoFIBC2uIoAMCQAkCnABTSFkcBAIYU
        ADoFoJC2OAoAMKQA0CkAhbTFUQCAIQWATgEopC2OAgAMKQB0CkAhbXEUAGBIAaBTAAppi6MAAEMKAJ0C
        UEhbHAUAGFIA6BSAQtriKADAkAJApwAU0hZHAQCGFAA6BaCQtjgKADCkANApAIW0xVEAgCEFgE4BKKQt
        jgIADCkAdApAIW1xFABgSAGgUwAKaYujAABDCgCdAlBIWxwFABhSAOgUgELa4igAwJACQKcAFNIWRwEA
        hrYUgD/+/jcKQEG9AETBy9Y9oQDMqi2OAgAMbSkAIc4Sewmghr6e2Xq/QgGYVVscBQAY2loAQi8B1BDD
        P3Z3srV+hQIwq7Y4CgAwtKcAhBgYsWXMsa0c/J0CMKu2OAoAMLS3APCuKQCzaoujAABDCgA7KACzaouj
        AABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaouj
        AABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaouj
        AABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaouj
        AABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaouj
        AABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaouj
        AABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaoujAABDCgA7KACzaouz
        LAC3EsdTAKCIiwIA11IAZtYWxw4AMGQHgB0UgFl9/fXXv4z/uO9xm3094Hji/8Djv2nYIvvf1KOlIQBQ
        WxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWl
        IQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoC
        ALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQ
        WxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWl
        IQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoC
        ALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQ
        WxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWlIQBQWxoCALWl
        IQBQWxoCALWlIQBQWxoCALWlIQBQ2S/+5P8Deu1o0dFLgBsAAAAASUVORK5CYII=
</value>
  </data>
</root>